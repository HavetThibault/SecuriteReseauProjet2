/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chaapplication;

import CHAMessages.AuthenticationCodeAnswer;
import CHAMessages.AuthenticationCodeRequest;
import GenericMessages.Answer;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.InvalidKeyException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Security;
import java.security.Signature;
import java.security.SignatureException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import org.bouncycastle.jce.provider.BouncyCastleProvider;

/**
 *
 * @author Thibault
 */
public class FrameAuthenticationCode extends javax.swing.JFrame {

    static private String CODE_PROVIDER = "BC";
    
    private PrivateKey rsaPrivateKey;
    private PublicKey rsaACSPublicKey;
    /**
     * Creates new form FrameAuthenticationCode
     */
    public FrameAuthenticationCode() throws FileNotFoundException, IOException, KeyStoreException, NoSuchAlgorithmException, CertificateException, NoSuchProviderException, UnrecoverableKeyException {
        initComponents();
        System.setProperty("javax.net.ssl.trustStore", "D:\\SSLCertificates\\RealProjet3DSecure\\ClientCHAKeystore.jks");
        System.setProperty("javax.net.ssl.trustStorePassword", "changeit");
        Security.addProvider(new BouncyCastleProvider());
        
        KeyStore ks = KeyStore.getInstance("JKS");
        try(FileInputStream keyStoreInputStream = new FileInputStream("D:\\SSLCertificates\\RealProjet3DSecure\\ClientCHAKeystore.jks")){
            ks.load(keyStoreInputStream,"changeit".toCharArray());
        }
        rsaPrivateKey = (PrivateKey) ks.getKey("rsaKey1", "changeit".toCharArray());
        rsaACSPublicKey = ks.getCertificate("certACS").getPublicKey();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ObtenirCodeButton = new javax.swing.JButton();
        TextFieldCarteCredit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        LabelCode = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ObtenirCodeButton.setText("Obtenir le code");
        ObtenirCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObtenirCodeButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Code :");

        jLabel2.setText("Carte de cr√©dit :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldCarteCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(LabelCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(ObtenirCodeButton))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldCarteCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ObtenirCodeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelCode, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ObtenirCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObtenirCodeButtonActionPerformed
        String cardNumber = TextFieldCarteCredit.getText();
        try {
            AuthenticationCodeRequest request = createAuthenticationCodeRequest(cardNumber);
            SSLSocket acsSocket = createSSLSocketToACSServer();
            
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(acsSocket.getOutputStream());
            ObjectInputStream objectInputStream = new ObjectInputStream(acsSocket.getInputStream());
            objectOutputStream.writeObject(request);
            
            Answer acsAnswer = (Answer) objectInputStream.readObject();
            if(acsAnswer.isSuccess())
            {
                AuthenticationCodeAnswer acsAnswerCode = (AuthenticationCodeAnswer) acsAnswer;
                
                Signature rsaSignature = Signature.getInstance("SHA1withRSA", CODE_PROVIDER);  
                rsaSignature.initVerify(rsaACSPublicKey);
                rsaSignature.update(acsAnswerCode.getObjectBytes());
                
                if(rsaSignature.verify(acsAnswerCode.getSignature()))
                    LabelCode.setText(acsAnswerCode.getAuthenticationCode());
                else
                    LabelCode.setText("Bad signature from ACS.");
            }
            else
            {
                LabelCode.setText(acsAnswer.getMessage());
            }
            
            acsSocket.close();
        } 
        catch (NoSuchAlgorithmException | NoSuchProviderException | IOException | SignatureException | InvalidKeyException | ClassNotFoundException ex) {
            Logger.getLogger(FrameAuthenticationCode.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ObtenirCodeButtonActionPerformed

    private AuthenticationCodeRequest createAuthenticationCodeRequest(String cardNumber) throws NoSuchAlgorithmException, NoSuchProviderException, SignatureException, IOException, InvalidKeyException
    {
        Date today = new Date();
        Signature rsaSignature = Signature.getInstance("SHA1withRSA", CODE_PROVIDER);
        rsaSignature.initSign(rsaPrivateKey);
        
        rsaSignature.update(AuthenticationCodeRequest.getObjectBytes(cardNumber, today));
        
        return new AuthenticationCodeRequest(cardNumber, today, rsaSignature.sign());
    }
    
    private SSLSocket createSSLSocketToACSServer() throws IOException
    {
        SSLSocketFactory sslsocketfactory = (SSLSocketFactory) SSLSocketFactory.getDefault();
        return (SSLSocket) sslsocketfactory.createSocket("localhost", 6666);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelCode;
    private javax.swing.JButton ObtenirCodeButton;
    private javax.swing.JTextField TextFieldCarteCredit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
